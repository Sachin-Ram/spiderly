name: .NET CLI Test

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Restore and Build .NET project
        run: |
          dotnet restore Spiderly.CLI/Spiderly.CLI.csproj
          dotnet build Spiderly.CLI/Spiderly.CLI.csproj

      - name: Install Spiderly CLI
        shell: powershell
        run: |
          dotnet tool install -g dotnet-ef
          try {
            dotnet tool uninstall --global Spiderly.CLI
          } catch {
            Write-Host "Tool not installed, skipping uninstall."
          }
          dotnet pack Spiderly.CLI/Spiderly.CLI.csproj -o ./nupkg
          dotnet tool install --global Spiderly.CLI --add-source ./nupkg
          $env:PATH += ";$env:USERPROFILE\.dotnet\tools"
          "test`r`ndefault" | spiderly init

      - name: Show test folder structure
        shell: bash
        run: |
          echo "Contents of /test directory:"
          ls -R ./test

      - name: Run Angular frontend in background
        shell: bash
        run: |
          echo "Installing frontend dependencies..."
          cd ./test/frontend
          npm install
          echo "Starting Angular frontend..."
          nohup npx ng serve --port 4200 --host 127.0.0.1 > ng.log 2>&1 &

      - name: Wait and verify frontend is up
        shell: bash
        run: |
          echo "Waiting 90 seconds for frontend to start..."
          sleep 90
          echo "Checking frontend at http://localhost:4200"
          curl -I http://localhost:4200 || (echo "Frontend is not responding" && cat ./test/frontend/ng.log)
